{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Nishank Lalit Jain\\\\OneDrive\\\\Desktop\\\\New folder\\\\candidateplatform\\\\src\\\\Components\\\\JobList\\\\JobList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport JobCard from '../JobCard/JobCard';\nimport './JobList.css'; // Import the CSS file for JobList component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction JobList() {\n  _s();\n  const [data, setData] = useState([]);\n  const [error, setError] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [pageNumber, setPageNumber] = useState(1);\n  const [hasMore, setHasMore] = useState(true);\n  const containerRef = useRef();\n  const myHeaders = new Headers();\n  myHeaders.append(\"Content-Type\", \"application/json\");\n  const requestOptions = {\n    method: \"POST\",\n    headers: myHeaders\n  };\n\n  // Function to fetch more data when the user scrolls to the bottom\n  const fetchMoreData = () => {\n    setIsLoading(true);\n    fetch(`https://api.weekday.technology/adhoc/getSampleJdJSON?page=${pageNumber + 1}`, requestOptions).then(response => {\n      if (!response.ok) {\n        throw new Error('Failed to fetch job data');\n      }\n      return response.json();\n    }).then(json => {\n      setData(prevData => [...prevData, ...json.jdList]);\n      setPageNumber(prevPageNumber => prevPageNumber + 1);\n      setHasMore(json.jdList.length > 0);\n    }).catch(error => setError(error.message)).finally(() => setIsLoading(false));\n  };\n\n  // Initial data fetching\n  useEffect(() => {\n    fetchMoreData();\n  });\n\n  // Add event listener for scroll\n  useEffect(() => {\n    const handleScroll = () => {\n      if (containerRef.current.scrollHeight - containerRef.current.scrollTop === containerRef.current.clientHeight) {\n        if (!isLoading && hasMore) {\n          fetchMoreData();\n        }\n      }\n    };\n    containerRef.current.addEventListener('scroll', handleScroll);\n    return () => {\n      containerRef.current.removeEventListener('scroll', handleScroll);\n    };\n  }, [isLoading, hasMore]);\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"job-list-container\",\n    ref: containerRef,\n    children: [data.map((job, index) => /*#__PURE__*/_jsxDEV(JobCard, {\n      job: job\n    }, job.jdUid, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }, this)), isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading\",\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 21\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n}\n_s(JobList, \"JBl8fiP3HNdSLwJ4LOiUzT9jG+Y=\");\n_c = JobList;\nexport default JobList;\nvar _c;\n$RefreshReg$(_c, \"JobList\");","map":{"version":3,"names":["React","useState","useEffect","useRef","JobCard","jsxDEV","_jsxDEV","JobList","_s","data","setData","error","setError","isLoading","setIsLoading","pageNumber","setPageNumber","hasMore","setHasMore","containerRef","myHeaders","Headers","append","requestOptions","method","headers","fetchMoreData","fetch","then","response","ok","Error","json","prevData","jdList","prevPageNumber","length","catch","message","finally","handleScroll","current","scrollHeight","scrollTop","clientHeight","addEventListener","removeEventListener","children","fileName","_jsxFileName","lineNumber","columnNumber","className","ref","map","job","index","jdUid","_c","$RefreshReg$"],"sources":["C:/Users/Nishank Lalit Jain/OneDrive/Desktop/New folder/candidateplatform/src/Components/JobList/JobList.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport JobCard from '../JobCard/JobCard';\r\nimport './JobList.css'; // Import the CSS file for JobList component\r\n\r\nfunction JobList() {\r\n  const [data, setData] = useState([]);\r\n  const [error, setError] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [pageNumber, setPageNumber] = useState(1);\r\n  const [hasMore, setHasMore] = useState(true);\r\n  const containerRef = useRef();\r\n\r\n  const myHeaders = new Headers();\r\n  myHeaders.append(\"Content-Type\", \"application/json\");\r\n\r\n  const requestOptions = {\r\n    method: \"POST\",\r\n    headers: myHeaders,\r\n  };\r\n\r\n  // Function to fetch more data when the user scrolls to the bottom\r\n  const fetchMoreData = () => {\r\n    setIsLoading(true);\r\n    fetch(`https://api.weekday.technology/adhoc/getSampleJdJSON?page=${pageNumber + 1}`, requestOptions)\r\n      .then(response => {\r\n        if (!response.ok) {\r\n          throw new Error('Failed to fetch job data');\r\n        }\r\n        return response.json();\r\n      })\r\n      .then(json => {\r\n        setData(prevData => [...prevData, ...json.jdList]);\r\n        setPageNumber(prevPageNumber => prevPageNumber + 1);\r\n        setHasMore(json.jdList.length > 0);\r\n      })\r\n      .catch(error => setError(error.message))\r\n      .finally(() => setIsLoading(false));\r\n  };\r\n\r\n  // Initial data fetching\r\n  useEffect(() => {\r\n    fetchMoreData();\r\n  });\r\n\r\n  // Add event listener for scroll\r\n  useEffect(() => {\r\n    const handleScroll = () => {\r\n      if (\r\n        containerRef.current.scrollHeight - containerRef.current.scrollTop === containerRef.current.clientHeight\r\n      ) {\r\n        if (!isLoading && hasMore) {\r\n          fetchMoreData();\r\n        }\r\n      }\r\n    };\r\n\r\n    containerRef.current.addEventListener('scroll', handleScroll);\r\n    return () => {\r\n      containerRef.current.removeEventListener('scroll', handleScroll);\r\n    };\r\n  }, [isLoading, hasMore]);\r\n\r\n  if (error) {\r\n    return <div>Error: {error}</div>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"job-list-container\" ref={containerRef}>\r\n      {data.map((job, index) => (\r\n        <JobCard key={job.jdUid} job={job} />        \r\n      ))}\r\n      {isLoading && <div className=\"loading\">Loading...</div>}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default JobList;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAC1D,OAAOC,OAAO,MAAM,oBAAoB;AACxC,OAAO,eAAe,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAExB,SAASC,OAAOA,CAAA,EAAG;EAAAC,EAAA;EACjB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACU,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACY,SAAS,EAAEC,YAAY,CAAC,GAAGb,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACc,UAAU,EAAEC,aAAa,CAAC,GAAGf,QAAQ,CAAC,CAAC,CAAC;EAC/C,MAAM,CAACgB,OAAO,EAAEC,UAAU,CAAC,GAAGjB,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAMkB,YAAY,GAAGhB,MAAM,CAAC,CAAC;EAE7B,MAAMiB,SAAS,GAAG,IAAIC,OAAO,CAAC,CAAC;EAC/BD,SAAS,CAACE,MAAM,CAAC,cAAc,EAAE,kBAAkB,CAAC;EAEpD,MAAMC,cAAc,GAAG;IACrBC,MAAM,EAAE,MAAM;IACdC,OAAO,EAAEL;EACX,CAAC;;EAED;EACA,MAAMM,aAAa,GAAGA,CAAA,KAAM;IAC1BZ,YAAY,CAAC,IAAI,CAAC;IAClBa,KAAK,CAAE,6DAA4DZ,UAAU,GAAG,CAAE,EAAC,EAAEQ,cAAc,CAAC,CACjGK,IAAI,CAACC,QAAQ,IAAI;MAChB,IAAI,CAACA,QAAQ,CAACC,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,0BAA0B,CAAC;MAC7C;MACA,OAAOF,QAAQ,CAACG,IAAI,CAAC,CAAC;IACxB,CAAC,CAAC,CACDJ,IAAI,CAACI,IAAI,IAAI;MACZtB,OAAO,CAACuB,QAAQ,IAAI,CAAC,GAAGA,QAAQ,EAAE,GAAGD,IAAI,CAACE,MAAM,CAAC,CAAC;MAClDlB,aAAa,CAACmB,cAAc,IAAIA,cAAc,GAAG,CAAC,CAAC;MACnDjB,UAAU,CAACc,IAAI,CAACE,MAAM,CAACE,MAAM,GAAG,CAAC,CAAC;IACpC,CAAC,CAAC,CACDC,KAAK,CAAC1B,KAAK,IAAIC,QAAQ,CAACD,KAAK,CAAC2B,OAAO,CAAC,CAAC,CACvCC,OAAO,CAAC,MAAMzB,YAAY,CAAC,KAAK,CAAC,CAAC;EACvC,CAAC;;EAED;EACAZ,SAAS,CAAC,MAAM;IACdwB,aAAa,CAAC,CAAC;EACjB,CAAC,CAAC;;EAEF;EACAxB,SAAS,CAAC,MAAM;IACd,MAAMsC,YAAY,GAAGA,CAAA,KAAM;MACzB,IACErB,YAAY,CAACsB,OAAO,CAACC,YAAY,GAAGvB,YAAY,CAACsB,OAAO,CAACE,SAAS,KAAKxB,YAAY,CAACsB,OAAO,CAACG,YAAY,EACxG;QACA,IAAI,CAAC/B,SAAS,IAAII,OAAO,EAAE;UACzBS,aAAa,CAAC,CAAC;QACjB;MACF;IACF,CAAC;IAEDP,YAAY,CAACsB,OAAO,CAACI,gBAAgB,CAAC,QAAQ,EAAEL,YAAY,CAAC;IAC7D,OAAO,MAAM;MACXrB,YAAY,CAACsB,OAAO,CAACK,mBAAmB,CAAC,QAAQ,EAAEN,YAAY,CAAC;IAClE,CAAC;EACH,CAAC,EAAE,CAAC3B,SAAS,EAAEI,OAAO,CAAC,CAAC;EAExB,IAAIN,KAAK,EAAE;IACT,oBAAOL,OAAA;MAAAyC,QAAA,GAAK,SAAO,EAACpC,KAAK;IAAA;MAAAqC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAClC;EAEA,oBACE7C,OAAA;IAAK8C,SAAS,EAAC,oBAAoB;IAACC,GAAG,EAAElC,YAAa;IAAA4B,QAAA,GACnDtC,IAAI,CAAC6C,GAAG,CAAC,CAACC,GAAG,EAAEC,KAAK,kBACnBlD,OAAA,CAACF,OAAO;MAAiBmD,GAAG,EAAEA;IAAI,GAApBA,GAAG,CAACE,KAAK;MAAAT,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAa,CACrC,CAAC,EACDtC,SAAS,iBAAIP,OAAA;MAAK8C,SAAS,EAAC,SAAS;MAAAL,QAAA,EAAC;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACpD,CAAC;AAEV;AAAC3C,EAAA,CAtEQD,OAAO;AAAAmD,EAAA,GAAPnD,OAAO;AAwEhB,eAAeA,OAAO;AAAC,IAAAmD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}