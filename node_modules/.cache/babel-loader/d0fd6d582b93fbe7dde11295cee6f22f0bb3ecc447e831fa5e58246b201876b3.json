{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Nishank Lalit Jain\\\\OneDrive\\\\Desktop\\\\New folder\\\\candidateplatform\\\\src\\\\Components\\\\JobList\\\\JobList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef, useCallback } from 'react';\nimport JobCard from './JobCard';\nimport './JobList.css'; // Import the CSS file for JobList component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction JobList() {\n  _s();\n  const [data, setData] = useState([]);\n  const [error, setError] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [pageNumber, setPageNumber] = useState(1);\n  const [hasMore, setHasMore] = useState(true);\n  const myHeaders = new Headers();\n  myHeaders.append(\"Content-Type\", \"application/json\");\n  const requestOptions = {\n    method: \"POST\",\n    headers: myHeaders\n  };\n\n  // Ref for the last job card element\n  const observer = useRef();\n  const lastJobCardRef = useCallback(node => {\n    if (isLoading || !hasMore) return;\n    if (observer.current) observer.current.disconnect();\n    observer.current = new IntersectionObserver(entries => {\n      if (entries[0].isIntersecting) {\n        fetchMoreData();\n      }\n    });\n    if (node) observer.current.observe(node);\n  }, [isLoading, hasMore]);\n  const fetchMoreData = () => {\n    setIsLoading(true);\n    fetch(`https://api.weekday.technology/adhoc/getSampleJdJSON?page=${pageNumber + 1}`, requestOptions).then(response => {\n      if (!response.ok) {\n        throw new Error('Failed to fetch job data');\n      }\n      return response.json();\n    }).then(json => {\n      setData(prevData => [...prevData, ...json.jdList]);\n      setPageNumber(prevPageNumber => prevPageNumber + 1);\n      setHasMore(json.jdList.length > 0); // Check if there's more data to load\n    }).catch(error => setError(error.message)).finally(() => setIsLoading(false));\n  };\n  useEffect(() => {\n    // Fetch initial data\n    fetch(`https://api.weekday.technology/adhoc/getSampleJdJSON?page=${pageNumber}`, requestOptions).then(response => {\n      if (!response.ok) {\n        throw new Error('Failed to fetch job data');\n      }\n      return response.json();\n    }).then(json => {\n      setData(json.jdList);\n      setPageNumber(prevPageNumber => prevPageNumber + 1);\n      setHasMore(json.jdList.length > 0); // Check if there's more data to load\n    }).catch(error => setError(error.message));\n  }, []);\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"job-list-container\",\n    children: [data.slice(0, 6).map((job, index) => /*#__PURE__*/_jsxDEV(JobCard, {\n      job: job\n    }, job.jdUid, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }, this)), hasMore && /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: lastJobCardRef,\n      className: \"load-more\",\n      children: isLoading ? 'Loading...' : 'Scroll to load more'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n}\n_s(JobList, \"7sF5zxijY+sm08a9wh9oERpxzW4=\");\n_c = JobList;\nexport default JobList;\nvar _c;\n$RefreshReg$(_c, \"JobList\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useCallback","JobCard","jsxDEV","_jsxDEV","JobList","_s","data","setData","error","setError","isLoading","setIsLoading","pageNumber","setPageNumber","hasMore","setHasMore","myHeaders","Headers","append","requestOptions","method","headers","observer","lastJobCardRef","node","current","disconnect","IntersectionObserver","entries","isIntersecting","fetchMoreData","observe","fetch","then","response","ok","Error","json","prevData","jdList","prevPageNumber","length","catch","message","finally","children","fileName","_jsxFileName","lineNumber","columnNumber","className","slice","map","job","index","jdUid","ref","_c","$RefreshReg$"],"sources":["C:/Users/Nishank Lalit Jain/OneDrive/Desktop/New folder/candidateplatform/src/Components/JobList/JobList.js"],"sourcesContent":["import React, { useState, useEffect, useRef, useCallback } from 'react';\r\nimport JobCard from './JobCard';\r\nimport './JobList.css'; // Import the CSS file for JobList component\r\n\r\nfunction JobList() {\r\n  const [data, setData] = useState([]);\r\n  const [error, setError] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [pageNumber, setPageNumber] = useState(1);\r\n  const [hasMore, setHasMore] = useState(true);\r\n  const myHeaders = new Headers();\r\n  myHeaders.append(\"Content-Type\", \"application/json\");\r\n\r\n  const requestOptions = {\r\n    method: \"POST\",\r\n    headers: myHeaders,\r\n  };\r\n\r\n  // Ref for the last job card element\r\n  const observer = useRef();\r\n  const lastJobCardRef = useCallback(node => {\r\n    if (isLoading || !hasMore) return;\r\n    if (observer.current) observer.current.disconnect();\r\n    observer.current = new IntersectionObserver(entries => {\r\n      if (entries[0].isIntersecting) {\r\n        fetchMoreData();\r\n      }\r\n    });\r\n    if (node) observer.current.observe(node);\r\n  }, [isLoading, hasMore]);\r\n\r\n  const fetchMoreData = () => {\r\n    setIsLoading(true);\r\n    fetch(`https://api.weekday.technology/adhoc/getSampleJdJSON?page=${pageNumber + 1}`, requestOptions)\r\n      .then(response => {\r\n        if (!response.ok) {\r\n          throw new Error('Failed to fetch job data');\r\n        }\r\n        return response.json();\r\n      })\r\n      .then(json => {\r\n        setData(prevData => [...prevData, ...json.jdList]);\r\n        setPageNumber(prevPageNumber => prevPageNumber + 1);\r\n        setHasMore(json.jdList.length > 0); // Check if there's more data to load\r\n      })\r\n      .catch(error => setError(error.message))\r\n      .finally(() => setIsLoading(false));\r\n  };\r\n\r\n  useEffect(() => {\r\n    // Fetch initial data\r\n    fetch(`https://api.weekday.technology/adhoc/getSampleJdJSON?page=${pageNumber}`, requestOptions)\r\n      .then(response => {\r\n        if (!response.ok) {\r\n          throw new Error('Failed to fetch job data');\r\n        }\r\n        return response.json();\r\n      })\r\n      .then(json => {\r\n        setData(json.jdList);\r\n        setPageNumber(prevPageNumber => prevPageNumber + 1);\r\n        setHasMore(json.jdList.length > 0); // Check if there's more data to load\r\n      })\r\n      .catch(error => setError(error.message));\r\n  }, []);\r\n\r\n  if (error) {\r\n    return <div>Error: {error}</div>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"job-list-container\">\r\n      {data.slice(0, 6).map((job, index) => (\r\n        <JobCard key={job.jdUid} job={job} />\r\n      ))}\r\n      {hasMore && (\r\n        <div ref={lastJobCardRef} className=\"load-more\">\r\n          {isLoading ? 'Loading...' : 'Scroll to load more'}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default JobList;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}